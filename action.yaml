name: Rust Cargo cache
description: Saves and restores Rust build cache in target and ~/.cargo directories
branding:
  icon: coffee
  color: orange
inputs: {}
outputs: {}
runs:
  using: composite
  steps:
    - shell: bash
      run: |
        rustup default nightly
        echo CARGO_UNSTABLE_GC=true >> ${{ github.env }}

        echo prefix=cargo-cache-v1 >> ${{ github.env }}
        echo directory=.cargo_cache >> ${{ github.env }}
    - shell: bash
      run: |
        set -x
        mkdir -p $directory
        for file in $(find . -name Cargo.lock | sort); do
          echo $file
          target_file=$directory/$file
          mkdir -p $(dirname $target_file)
          cp $file $target_file
        done
    # TODO Move this to post steps and remove timestamps from keys.
    # https://github.com/actions/runner/issues/1478
    - shell: bash
      run: |
        cargo install --list > $directory/install.txt
        echo timestamp=$(date +%s) >> ${{ github.env }}
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/.*
          ~/.cargo/bin
          ~/.cargo/git
          ~/.cargo/registry
          **/target/*/*.d
          **/target/*/*.rlib
          **/target/*/.fingerprint
          **/target/*/build
          **/target/*/deps
        key: ${{ env.prefix }}-${{ runner.os }}-${{ github.job }}-${{ github.action }}-${{ hashFiles(join(env.directory, '/**')) }}-${{ env.timestamp }}
        restore-keys: |
          ${{ env.prefix }}-${{ runner.os }}-${{ github.job }}-${{ github.action }}-${{ hashFiles(join(env.directory, '/**')) }}-
          ${{ env.prefix }}-${{ runner.os }}-${{ github.job }}-${{ github.action }}-
          ${{ env.prefix }}-${{ runner.os }}-${{ github.job }}-
          ${{ env.prefix }}-${{ runner.os }}-
